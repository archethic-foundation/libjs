import { Balance, NearestEndpoint, OracleData, Ownership, Token, TransactionFee } from "./types.js";
import TransactionBuilder from "./transaction_builder.js";
export declare function rawGraphQLQuery(query: string, endpoint: string): Promise<any>;
export declare function getNearestEndpoints(endpoint: string): Promise<NearestEndpoint[]>;
export declare function getTransactionIndex(address: string | Uint8Array, endpoint: string): Promise<number>;
export declare function getStorageNoncePublicKey(endpoint: string): Promise<string>;
export declare function getTransactionFee(tx: TransactionBuilder, endpoint: string): Promise<TransactionFee>;
export declare function getTransactionOwnerships(address: string | Uint8Array, endpoint: string, last?: boolean): Promise<Ownership[]>;
export declare function getToken(tokenAddress: string | Uint8Array, endpoint: string): Promise<{} | Token>;
export declare function addOriginKey(originPublicKey: string, certificate: string, endpoint: string): Promise<any>;
export declare function getOracleData(endpoint: string, timestamp?: undefined | number): Promise<OracleData>;
export declare function subscribeToOracleUpdates(endpoint: string, handler: Function): Promise<any>;
export declare function getBalance(address: string | Uint8Array, endpoint: string): Promise<Balance>;
